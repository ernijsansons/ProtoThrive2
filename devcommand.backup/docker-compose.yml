version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.frontend
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8787
      - NEXT_PUBLIC_WS_URL=ws://localhost:8787
      - NEXT_PUBLIC_ENVIRONMENT=development
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    depends_on:
      - backend
    networks:
      - devcommand-network

  # Backend service (for local testing only)
  backend:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.backend
      target: development
    ports:
      - "8787:8787"
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=development
    volumes:
      - ./backend/src:/app/backend/src
      - ./shared/src:/app/shared/src
    networks:
      - devcommand-network

  # Local D1 database emulator
  d1-local:
    image: ghcr.io/cloudflare/miniflare:latest
    command: --d1-persist ./data/d1
    volumes:
      - d1-data:/data/d1
    networks:
      - devcommand-network

  # Redis for caching (development only)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - devcommand-network

  # n8n for workflow automation
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=devcommand
      - N8N_BASIC_AUTH_PASSWORD=devcommand123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=development
      - WEBHOOK_URL=http://backend:8787/api/webhooks/n8n
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      - devcommand-network

networks:
  devcommand-network:
    driver: bridge

volumes:
  d1-data:
  redis-data:
  n8n-data:
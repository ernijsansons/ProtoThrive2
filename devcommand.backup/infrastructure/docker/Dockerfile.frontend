# Frontend Dockerfile
FROM node:18-alpine AS base

# Install pnpm
RUN corepack enable
RUN corepack prepare pnpm@8 --activate

# Install dependencies for canvas/image processing
RUN apk add --no-cache libc6-compat

# Set working directory
WORKDIR /app

# Copy workspace files
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./
COPY package.json ./

# Copy shared workspace
COPY shared/package.json ./shared/
COPY shared/ ./shared/

# Copy frontend workspace
COPY frontend/package.json ./frontend/
COPY frontend/ ./frontend/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build shared package
WORKDIR /app/shared
RUN pnpm build

# Build frontend
WORKDIR /app/frontend
ENV NEXT_TELEMETRY_DISABLED 1
RUN pnpm build

# Production stage
FROM node:18-alpine AS production

RUN corepack enable
RUN corepack prepare pnpm@8 --activate

WORKDIR /app

# Copy necessary files from build stage
COPY --from=base /app/frontend/package.json ./
COPY --from=base /app/frontend/.next ./.next
COPY --from=base /app/frontend/public ./public
COPY --from=base /app/frontend/next.config.js ./
COPY --from=base /app/node_modules ./node_modules

# Set environment to production
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Expose port
EXPOSE 3000

# Start the application
CMD ["pnpm", "start"]
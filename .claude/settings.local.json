{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(ls:*)",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(find:*)",
      "Bash(npm run lint:*)",
      "Bash(mkdir:*)",
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(npm run lint)",
      "Bash(npm test)",
      "Bash(npx eslint:*)",
      "Bash(mkdir:*)",
      "Bash(npm test)",
      "Bash(npx jest:*)",
      "Bash(poetry init:*)",
      "Bash(npm test)",
      "Bash(npm run lint)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(python3 -m pylint:*)",
      "Bash(python3 -m pip install:*)",
      "Bash(python3:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(python -m pytest tests/test_router.py -v)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "Bash(jq:*)",
      "Bash(true)",
      "Bash(mv:*)",
      "Bash(poetry run pylint:*)",
      "Bash(poetry run pytest:*)",
      "Bash(python:*)",
      "Bash(npm run validate:all:*)",
      "Bash(cp:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run test:*)",
      "Bash(pkill:*)",
      "Bash(git init:*)",
      "Bash(echo:*)",
      "Bash(chmod:*)",
      "Bash(./start-mvp.sh:*)",
      "Bash(./scripts/full-lint.sh:*)",
      "Bash(./scripts/full-test.sh:*)",
      "Bash(wrangler:*)",
      "Bash(npx wrangler:*)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler d1 create protothrive-db)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler kv:namespace create protothrive-kv)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler kv namespace create protothrive-kv)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler d1 execute protothrive-db --file=migrations/001_init.sql)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler d1 execute protothrive-db --file=migrations/001_init.sql --remote)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler deploy --name protothrive-backend)",
      "Bash(curl:*)",
      "Bash(CLOUDFLARE_API_TOKEN=SlwPVG1dlZuOzIhTx6sd-MSldU3x6OcFW_M-IObh npx wrangler d1 execute protothrive-db --file=migrations/002_seed.sql --remote)",
      "Bash(npm ls:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npx depcheck:*)",
      "Bash(./deploy-cloudflare.sh:*)",
      "Bash(./INSTANT_DEPLOY.sh)",
      "WebFetch(domain:protothrive-frontend.pages.dev)",
      "WebFetch(domain:25f8e87b.protothrive-frontend.pages.dev)",
      "WebFetch(domain:4618f627.protothrive-frontend.pages.dev)",
      "Bash(PYTHONPATH=./src python -m pytest monitoring/test_monitoring.py::MonitoringTestSuite::test_health_checks -v)",
      "Bash(pip install:*)",
      "Bash(npm run migrate:*)",
      "Bash(for file in frontend/src/utils/perfect-phase{4,5,6,7,8,9}.ts)",
      "Bash(do)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(for file in frontend/src/utils/ultimate-{performance,security,ai}.ts)",
      "Bash(npm test:*)",
      "Bash(npm ci:*)",
      "Bash(/dev/null)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git clean:*)",
      "Bash(cat:*)"
    ],
    "defaultMode": "acceptEdits"
  }
}